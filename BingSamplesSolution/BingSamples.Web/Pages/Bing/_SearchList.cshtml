@model BingSamples.Web.Core.PaginatedList<BingSamples.Web.Models.SearchModel>
@if (Model.Any())
{
    <div id="grid">
        <table class="table table-light table-hover"
               id="tbData">
            <caption>
                @if (string.IsNullOrEmpty(Model.Query))
                {
                    @:Result list
                }
                else
                {
                    @:Result list for query <b>@Model.Query</b>
                }
            </caption>
            @foreach (var searchPageModel in Model)
            {
                <tr>
                    <td>
                        @if (string.IsNullOrEmpty(searchPageModel.Image))
                        {
                            <img alt="@searchPageModel.Title"
                                 class="img-thumbnail"
                                 src="~/images/default-image.png">
                        }
                        else
                        {
                            <img alt="@searchPageModel.Title"
                                 class="img-thumbnail"
                                 src="@searchPageModel.Image">
                        }
                    </td>
                    <td>
                        <a href="@searchPageModel.UrlOrigin"
                           target="_blank">
                            @searchPageModel.Title
                        </a>
                    </td>
                    <td class="text-center">@searchPageModel.Description</td>
                </tr>
            }
        </table>
        <nav>
            <ul class="pagination">
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    @if (Model.PageIndex - 1 < 1)
                    {
                        <a asp-route-pageNumber="1"
                           asp-route-query="@Model.Query"
                           class="page-link">
                            Previous
                        </a>
                    }
                    else
                    {
                        <a asp-route-pageNumber="@(Model.PageIndex - 1)"
                           asp-route-query="@Model.Query"
                           class="page-link">
                            Previous
                        </a>
                    }
                </li>
                @for (var currentPageIndex = 1; currentPageIndex <= Model.TotalPages; currentPageIndex++)
                {
                    <li class="page-item @(Model.PageIndex == currentPageIndex ? "active" : "")">
                        <a asp-route-pageNumber="@currentPageIndex"
                           asp-route-query="@Model.Query"
                           class="page-link">
                            @currentPageIndex
                        </a>
                    </li>
                }
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    @if (Model.PageIndex + 1 < Model.TotalPages)
                    {
                        <a asp-route-pageNumber="@(Model.PageIndex + 1)"
                           asp-route-query="@Model.Query"
                           class="page-link">
                            Next
                        </a>
                    }
                    else
                    {
                        <a asp-route-pageNumber="@(Model.TotalPages)"
                           asp-route-query="@Model.Query"
                           class="page-link">
                            Next
                        </a>
                    }
                </li>
            </ul>
        </nav>
    </div>
}
else
{
    <p>No data present based on selected filter. Check filter and try again.</p>
}